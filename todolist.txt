FEATURE REQUEST

-	login (social auth)
		https://pypi.python.org/pypi/python-social-auth
-	chat
		https://pypi.python.org/pypi/django-socketio
-	localization
	-	markov chain per creare nomi
	-	https://docs.djangoproject.com/en/1.8/topics/i18n/translation/
	-	https://pypi.python.org/pypi/django-rosetta
-	utilizzare ModelForm dove applicabile
-	opzioni sul voto dei lupi (lupo alpha, maggioranza relativa/assoluta/unanimita')
	> da modificare in act_werewolf :-(
-	t in ROLE_PASSIVE non ha senso
-	modellizzare omogeneamente le flags come DEATH_NULL
-	altri ruoli possibili (sequestratore, incantatore, fratello...)
-	popup (con jquery?) per conferma di inizia/ferma partita
-	grafica
	-	avatars
	-	temi per i villaggi
-	sfida i tuoi amici
		https://pypi.python.org/pypi/django-social-friends-finder
		https://pypi.python.org/pypi/django-facebook

DOCUMENTAZIONE

-	nel server, il ruolo "morto" Ã¨ sempre quantistico
-	in status, nessun campo = deathday (e probability e' l'average)
-	su azioni multiple nel database, vale l'ultima
-	in action, il role_id = -PHASE vuol dire voto
	(fase giorno incrementale su ballottaggi)
-	day=0 -> partita in attesa, day<0 -> partita terminata,
	day=1, phase=0 -> il server attiva la partita
-	quando il server fa partire la partita, vengono scartati giocatori oltre i
	max_players e oltre i characters creati, allo stesso modo vengono scartati
	i characters oltre il numero di giocatori
